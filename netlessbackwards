local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "HoldSRender"
gui.ResetOnSpawn = false

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 80, 0, 40)
button.Position = UDim2.new(0, 100, 0, 100)
button.BackgroundColor3 = Color3.fromRGB(0, 0, 100)
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.Text = "S"
button.Font = Enum.Font.SourceSansBold
button.TextSize = 30
button.Parent = gui
button.Active = true

-- DRAGGABLE
local dragging, dragStart, startPos, dragInput = false

button.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = button.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

button.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		button.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

-- HOLD SYSTEM
local holding = false
local connection = nil

local function startHoldS()
	if holding then return end
	holding = true
	UserInputService.MouseIconEnabled = false

	connection = RunService.RenderStepped:Connect(function()
		VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.S, false, game)
	end)
end

local function stopHoldS()
	if not holding then return end
	holding = false
	UserInputService.MouseIconEnabled = true

	VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.S, false, game)

	if connection then
		connection:Disconnect()
		connection = nil
	end
end

button.MouseButton1Click:Connect(function()
	if holding then
		stopHoldS()
	else
		startHoldS()
	end
end)

-- Cleanup
game:BindToClose(stopHoldS)
player.CharacterRemoving:Connect(stopHoldS)
